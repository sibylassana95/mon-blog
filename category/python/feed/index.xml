<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Python &#8211; SIBY INFORMATIQUE</title>
	<atom:link href="https://sibylassana95.github.io/mon-blog/category/python/feed/" rel="self" type="application/rss+xml" />
	<link>https://sibylassana95.github.io/mon-blog</link>
	<description>Astuce - Cours - Actualité</description>
	<lastBuildDate>Sat, 18 Jun 2022 05:18:24 +0000</lastBuildDate>
	<language>fr-FR</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.0</generator>
	<item>
		<title>Les boucles While, for en Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/les-boucles-while-for-en-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/les-boucles-while-for-en-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 04:40:11 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=150</guid>

					<description><![CDATA[1 &#8211; La structure répétitive For &#8230; Sytaxe: Exemple. affichage des 10 premiers nombres Remarque&#160;. Noter que dans la&#160;boucle for&#160;i&#160;in range(1,n)&#160;le dernier qui est&#160;n&#160;n&#8217;est pas inclus ! Cela veut dire que la boucle s&#8217;arrête à l&#8217;ordre&#160;n-1. 2- La structure répétitive While La structure while permet d&#8217;exécuter un ensemble d&#8217;instructions tant qu&#8217;une condition est réalisée et&#8230;]]></description>
										<content:encoded><![CDATA[
<h2>1 &#8211; La structure répétitive For &#8230;</h2>



<p><strong>Sytaxe</strong>:</p>



<pre class="wp-block-code"><code># -*- coding: utf-8 -*-
for compteur in range(début_compteur, fin_compteur):
    instructions...</code></pre>



<h3>Exemple. affichage des 10 premiers nombres</h3>



<pre class="wp-block-code"><code># -*- coding: utf-8 -*-
for i in range(1,11):
    print(i)
#affiche les 10 premiers nombres 1 , 2 , ..., 10</code></pre>



<span id="more-150"></span>



<p><strong>Remarque</strong>&nbsp;. Noter que dans la&nbsp;<strong>boucle for&nbsp;i&nbsp;in range(1,n)</strong>&nbsp;le dernier qui est&nbsp;<strong>n</strong>&nbsp;n&rsquo;est pas inclus ! Cela veut dire que la boucle s&rsquo;arrête à l&rsquo;ordre&nbsp;<strong>n-1</strong>.</p>



<h2>2- La structure répétitive While</h2>



<p><br><br><br><br>La structure while permet d&rsquo;exécuter un ensemble d&rsquo;instructions tant qu&rsquo;une condition est réalisée et que l&rsquo;exécution s&rsquo;arrête lorsque la condition n&rsquo;est plus satisfaite.</p>



<p><strong>Sytaxe</strong>:</p>



<pre class="wp-block-code"><code>while ( condition ):
      intructions...</code></pre>



<p><strong>Exemple</strong>. affichage des 10 premiers entiers avec la boucle while</p>



<pre class="wp-block-code"><code>i = 1
while (i &lt; = 10):
      print(i)
      i = i + 1</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/les-boucles-while-for-en-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>La structure sélective If en Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/la-structure-selective-if-en-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/la-structure-selective-if-en-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 04:36:58 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=147</guid>

					<description><![CDATA[1 &#8211; La structure sélective If &#8230; Else &#8230; La structure&#160;sélective if &#8230;else, permet d’exécuter un ensemble d&#8217;instructions lorsqu&#8217;une condition est réalisée. Syntaxe: Exemple: 2 &#8211; L&#8217;instruction elif Enfance&#160; &#160;age &#60; 14&#160; Adolescence&#160; &#160;&#160;14 &#60; age &#60; 18 L&#8217;instruction&#160;else&#160; sélectionne la condition&#160;contraire&#160; qui est&#160;age &#60; 18&#160;et donc ne peut distinguer entre&#160; les deux cas&#160;enfance&#160;et&#160;adolescence. Ainsi&#8230;]]></description>
										<content:encoded><![CDATA[
<h2>1 &#8211; La structure sélective If &#8230; Else &#8230;</h2>



<p>La structure&nbsp;<strong>sélective if &#8230;else</strong>, permet d’exécuter un ensemble d&rsquo;instructions lorsqu&rsquo;une condition est réalisée.</p>



<p><strong>Syntaxe:</strong></p>



<pre class="wp-block-code"><code>if(condition):
   instructions...
else:
   autres instructions...</code></pre>



<h3><strong>Exemple:</strong></h3>



<pre class="wp-block-code"><code># -*- coding: utf-8 -*-
age = 19
if(age &gt;= 18):
   print("Vous êtes majeur !")
else:
   print("Vous êtes mineur !")
# affiche vous êtes majeur</code></pre>



<h2>2 &#8211; L&rsquo;instruction elif</h2>



<ul><li>Enfance&nbsp; &nbsp;<strong>age &lt; 14</strong>&nbsp;</li><li>Adolescence&nbsp; &nbsp;&nbsp;<strong>14 &lt; age &lt; 18</strong></li></ul>



<p>L&rsquo;instruction&nbsp;<strong>else</strong>&nbsp; sélectionne la condition&nbsp;<strong>contraire</strong>&nbsp; qui est&nbsp;<strong>age &lt; 18</strong>&nbsp;et donc ne peut distinguer entre&nbsp; les deux cas&nbsp;<strong>enfance</strong>&nbsp;et&nbsp;<strong>adolescence</strong>. Ainsi pour palier à ce problème, on utilise l&rsquo;instruction&nbsp;<strong>elif:</strong></p>



<span id="more-147"></span>



<h3>Exemple: instruction elif</h3>



<pre class="wp-block-code"><code># -*- coding: utf-8 -*-
age = int(input('tapez votre age : '))
if(age &gt;= 18):
    print("Vous êtes majeur !")
elif(age&lt;15):
    print("Vous êtes trop petit !")
else:
    print("Vous êtes adolescent!")</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/la-structure-selective-if-en-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Les fonctions en langage Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/les-fonctions-en-langage-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/les-fonctions-en-langage-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 04:34:58 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=145</guid>

					<description><![CDATA[Dans ce tutoriel, vous en apprendrez à créer et utiliser des fonctions: Qu&#8217;est-ce qu&#8217;une fonction en Python la syntaxe d&#8217;une fonction Les types d&#8217;une fonction Comment appeler une fonction 1 &#8211; Qu&#8217;est-ce qu&#8217;une fonction en Python? En Python,&#160; une fonction est un groupe d&#8217;instructions liées et structurées dont le but d&#8217;effectuer&#160; une tâche spécifique lors&#8230;]]></description>
										<content:encoded><![CDATA[
<p>Dans ce tutoriel, vous en apprendrez à créer et utiliser des fonctions:</p>



<ul><li>Qu&rsquo;est-ce qu&rsquo;une fonction en Python</li><li>la syntaxe d&rsquo;une fonction</li><li>Les types d&rsquo;une fonction</li><li>Comment appeler une fonction</li></ul>



<h2>1 &#8211; Qu&rsquo;est-ce qu&rsquo;une fonction en Python?</h2>



<p><br><br><br><br>En Python,&nbsp; une fonction est un groupe d&rsquo;instructions liées et structurées dont le but d&rsquo;effectuer&nbsp; une tâche spécifique lors qu&rsquo;elle est appelée.</p>



<span id="more-145"></span>



<p>Les fonctions aident à subdiviser le programme en morceaux plus petits et modulaires. Au fur et à mesure que le programme grandit, les fonctions le rendent plus organisé et plus facile à gérer. En&nbsp;plus, cela évite les répétitions et rend le code réutilisable.</p>



<h2>2 &#8211; Syntaxe et usage d&rsquo;une fonction</h2>



<p>La syntaxe d&rsquo;une fonction se déclare à l&rsquo;aide du mot clé&nbsp;<strong>def</strong>&nbsp;suivie du nom de la fonction</p>



<pre class="wp-block-code"><code>def nom_fonction (paramètres):
    Instructions...</code></pre>



<h3>Exemple: fonction qui renvoie le produit de deux nombres</h3>



<pre class="wp-block-code"><code>def produit(x,y):
      return x*y</code></pre>



<p>Pour utiliser une fonction, il suffit de taper son nom et insérer les paramètres à l&rsquo;intérieur des parenthèses</p>



<h3>Exemple:</h3>



<pre class="wp-block-code"><code>def produit(x,y):
      return x*y

print("Le produit de 5 et de 7  est  = ", produit(5,7))
# Affiche : Le produit de 5 et de 7  est  =  35</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/les-fonctions-en-langage-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Opérateurs Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/operateurs-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/operateurs-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 04:08:21 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=117</guid>

					<description><![CDATA[1- Les différents types d&#8217;opérateurs en Python Opérateurs arithmétiques Opérateurs d&#8217;assignation Opérateurs de comparaison Opérateurs logiques 2- Les opérateurs arithmétiques Les opérateurs arithmétiques sont utilisés en Python pour effectuer des opérations de calcul sur les variables comme addition, multiplication, division&#8230; Opérateur Description &#160;+&#160; Addition &#8211;&#160; Soustraction *&#160; Multiplication /&#160; Division %&#160; Modulo ( reste de&#8230;]]></description>
										<content:encoded><![CDATA[
<h2>1- Les différents types d&rsquo;opérateurs en Python</h2>



<ul><li>Opérateurs arithmétiques</li><li>Opérateurs d&rsquo;assignation</li><li>Opérateurs de comparaison</li><li>Opérateurs logiques</li></ul>



<h2>2- Les opérateurs arithmétiques</h2>



<p><br><br><br><br>Les opérateurs arithmétiques sont utilisés en Python pour effectuer des opérations de calcul sur les variables comme addition, multiplication, division&#8230;</p>



<figure class="wp-block-table"><table><tbody><tr><td><strong>Opérateur</strong></td><td><strong>Description</strong></td></tr><tr><td><strong>&nbsp;+&nbsp;</strong></td><td>Addition</td></tr><tr><td><strong>&#8211;&nbsp;</strong></td><td>Soustraction</td></tr><tr><td><strong>*&nbsp;</strong></td><td>Multiplication</td></tr><tr><td><strong>/&nbsp;</strong></td><td>Division</td></tr><tr><td><strong>%&nbsp;</strong></td><td>Modulo ( reste de la division euclidienne</td></tr><tr><td><strong>**&nbsp;</strong></td><td>Exponentiation</td></tr><tr><td><strong>//&nbsp;</strong></td><td>Division euclidienne (Floor division)</td></tr></tbody></table></figure>



<h2>3- Les opérateurs d&rsquo;assignation</h2>



<p><br><br><br><br>Les opérateurs d&rsquo;assignation sont utilisés en Python pour assigner des valeurs aux variables:</p>



<span id="more-117"></span>



<figure class="wp-block-table"><table><tbody><tr><td><strong>Opérateurs</strong></td><td><strong>Exemple</strong></td><td><strong>Explication</strong></td></tr><tr><td><strong>=&nbsp;</strong></td><td>x = 7</td><td>&nbsp;x = 7</td></tr><tr><td><strong>+ =&nbsp;</strong></td><td>x + = 5</td><td>x = x + 5</td></tr><tr><td><strong>&#8211; =&nbsp;&nbsp;</strong></td><td>x &#8211; = 5</td><td>x = x -5</td></tr><tr><td><strong>* =&nbsp;</strong></td><td>x * = 5</td><td>x = x *5</td></tr><tr><td><strong>/ =&nbsp;&nbsp;</strong></td><td>x / = 5</td><td>x = x / 5</td></tr><tr><td><strong>% =&nbsp;</strong></td><td>x % = 5</td><td>x = x %5</td></tr><tr><td><strong>// =&nbsp;&nbsp;</strong></td><td>x // = 5</td><td>x = x //5</td></tr><tr><td><strong>** =&nbsp;&nbsp;</strong></td><td>x ** = 5</td><td>x = x **5</td></tr><tr><td><strong>&amp; =&nbsp;</strong></td><td>x &amp; = 5</td><td>x = x &amp;5</td></tr></tbody></table></figure>



<h3>4- Opérateurs de comparaison</h3>



<p>Les opérateurs de comparaison sont utilisé en Python pour comparer les variables:</p>



<figure class="wp-block-table"><table><tbody><tr><td><strong>Opérateur</strong></td><td><strong>Description</strong></td></tr><tr><td><strong>= =</strong></td><td>opérateur d&rsquo;égalité</td></tr><tr><td><strong>!=</strong></td><td>opérateur différent</td></tr><tr><td><strong>&gt;</strong></td><td>supérieur</td></tr><tr><td><strong>&lt;</strong></td><td>inférieur</td></tr><tr><td><strong>&gt;=</strong></td><td>supérieur ou égale</td></tr><tr><td><strong>&lt;=</strong></td><td>inférieur ou égale</td></tr></tbody></table></figure>



<h2>5- Opérateurs logiques</h2>



<figure class="wp-block-table"><table><tbody><tr><td><strong>Opérateur</strong></td><td><strong>Description</strong></td></tr><tr><td><strong>and</strong></td><td><strong>et</strong>&nbsp; logique : renvoie&nbsp;<strong>t</strong><strong>rue</strong>&nbsp;si les deux instructions sont vraies et<strong>&nbsp;false&nbsp;</strong>dans le cas contraire</td></tr><tr><td><strong>or</strong></td><td><strong>ou</strong>&nbsp; logique: renvoie&nbsp;<strong>t</strong><strong>rue</strong>&nbsp;si l&rsquo;une des instructions est vraie et<strong>&nbsp;false&nbsp;</strong>dans le cas contraire</td></tr><tr><td><strong>not</strong></td><td>Negation renvoie&nbsp;<strong>False</strong>&nbsp;si l&rsquo;assertion est&nbsp;<strong>vrai</strong></td></tr></tbody></table></figure>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/operateurs-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Les commentaires en Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/les-commentaires-en-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/les-commentaires-en-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 03:44:12 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=112</guid>

					<description><![CDATA[1 &#8211; Qu&#8217;est-ce qu&#8217;un commentaire en Python? Les langages de programmation fournissent une méthode pour l&#8217;insertion de commentaires au seins du code afin de fournir des informations supplémentaire. Un commentaire n&#8217;est autre qu&#8217;un texte qui sera ignoré lors de l&#8217;exécution du programme. Les commentaires peuvent être utilisés pour expliquer une partie compliquée d&#8217;un programme, ou&#8230;]]></description>
										<content:encoded><![CDATA[
<h2>1 &#8211; Qu&rsquo;est-ce qu&rsquo;un commentaire en Python?</h2>



<p>Les langages de programmation fournissent une méthode pour l&rsquo;insertion de commentaires au seins du code afin de fournir des informations supplémentaire. Un commentaire n&rsquo;est autre qu&rsquo;un texte qui sera ignoré lors de l&rsquo;exécution du programme. Les commentaires peuvent être utilisés pour expliquer une partie compliquée d&rsquo;un programme, ou pour mettre des indications dans le code, comme le code source, la version du langage ou script&#8230;</p>



<h2>2 &#8211; Commentaire sur une seule ligne</h2>



<p><br><br><br><br>En Python, nous insérons un commentaire sur une seule ligne avec le caractère&nbsp;<strong># (un signe dièse).</strong></p>



<h4>Syntaxe</h4>



<pre class="wp-block-code"><code># Ceci est un commentaire qui sera ignoré à l'exécution</code></pre>



<h4>Exemple</h4>



<pre class="wp-block-code"><code># définir une variable de type entier
n = 5
# Affichage de la variable
print ("La valeur de n est:", n)</code></pre>



<h2>3 &#8211; Commentaire sur&nbsp; plusieurs lignes</h2>



<span id="more-112"></span>



<p>Si nous voulons insérer un commentaire sur plusieurs lignes en Python, nous utilisons le symbole des guillemets doubles</p>



<p>Syntaxe</p>



<pre class="wp-block-code"><code>"""
Ceci est un commentaire
en plusieurs lignes
qui sera ignoré lors de l'exécution
"""</code></pre>



<h4>Exemple</h4>



<pre class="wp-block-code"><code>"""
Code source: tresfacile.net
date: septembre 2019
Auteur: Younes Derfoufi
"""
&#91;mon code python ici]</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/les-commentaires-en-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Les variables en langage Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/109/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/109/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 03:35:17 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=109</guid>

					<description><![CDATA[1 &#8211; Création d&#8217;une variable en Python Exemple Les variables ne doivent pas nécessairement être déclarées avec un type particulier et peuvent même changer de type après avoir été définies. Exemple 2 &#8211; Noms de variables Règles pour les variables Python : Un nom de variable doit commencer par une lettre ou un caractère de&#8230;]]></description>
										<content:encoded><![CDATA[
<h2>1 &#8211; Création d&rsquo;une variable en Python</h2>



<h3>Exemple</h3>



<pre class="wp-block-code"><code>x = 7
y = "Albert"
print(x)
print(y)</code></pre>



<p>Les variables ne doivent pas nécessairement être déclarées avec un type particulier et peuvent même changer de type après avoir été définies.</p>



<h3>Exemple</h3>



<pre class="wp-block-code"><code>x = 3 # x est de type int
x = "Hello" # x est maintenant du type string
print (x)</code></pre>



<h2>2 &#8211; Noms de variables</h2>



<span id="more-109"></span>



<p>Règles pour les variables Python :</p>



<ul><li>Un nom de variable doit commencer par une lettre ou un caractère de soulignement</li><li>Un nom de variable ne peut pas commencer par un nombre</li><li>Un nom de variable ne peut contenir que des caractères alphanumériques et des traits de soulignement (A-z, 0-9 et _)</li><li>Les noms de variables sont sensibles à la casse (alberto, Alberto, ALBERTO sont trois variables différentes)</li><li>Rappelez-vous que les variables sont sensibles à la casse</li></ul>



<h2>3 &#8211; Output (ou sortie ) d&rsquo;une Variable</h2>



<p><br><br><br><br>L&rsquo;instruction print Python est souvent utilisée pour générer la sortie des variables.</p>



<p>Pour combiner le texte et une variable, Python utilise le caractère &lsquo;+&rsquo; :</p>



<h3>Exemple</h3>



<pre class="wp-block-code"><code>s = "le meilleur langage de programmation"
print ("Python est " + s)</code></pre>



<p>Vous pouvez également utiliser le caractère&nbsp; &lsquo;+&rsquo;&nbsp; pour ajouter une variable à une autre variable:</p>



<h3>Exemple</h3>



<pre class="wp-block-code"><code>x = "python est"
y = "orienté objet"
z = x + y
print(z)</code></pre>



<p>Pour les nombres, le caractère&nbsp; &lsquo;+&rsquo;&nbsp; fonctionne comme un opérateur mathématique:</p>



<h3>Exemple</h3>



<pre class="wp-block-code"><code>x = 7
y = 2
print(x + y) # affiche 9</code></pre>



<p>Si vous essayez de combiner une chaîne et un nombre, Python vous donnera une erreur:</p>



<h3>Exemple</h3>



<pre class="wp-block-code"><code>x = 3
y = "Alberto"
print(x + y) # Génère un message d'erreur indiquant qu'il n'est pas possible d'additionner une chaine de caractères à un nombre !</code></pre>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/109/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Création d&#8217;un premier programme Python avec Wing</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/creation-dun-premier-programme-python-avec-wing/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/creation-dun-premier-programme-python-avec-wing/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 03:30:33 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=107</guid>

					<description><![CDATA[1 ère étape: Télécharger&#160;et installer une version de Python. Notez bien&#160;qu&#8217;il ya deux versions&#160;2.7.x et 3.7.x, la première est compatible avec les anciennes versions de Windows comme Windows vista, Windows 7&#8230;Tandis que la seconde est compatible avec les nouveaux systèmes d&#8217;exploitation comme Windows 10&#8230;Choisissez donc la version qui vous convient et installez la à&#160;la racine&#8230;]]></description>
										<content:encoded><![CDATA[
<h3>1 ère étape:</h3>



<p><a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer noopener">Télécharger</a>&nbsp;et installer une version de Python.</p>


<div class="wp-block-image">
<figure class="aligncenter"><a href="https://www.python.org/downloads/" target="_blank" rel="noreferrer noopener"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/pytho-3.7-Python_logo.png" alt="" class="wp-image-5473"/></a></figure></div>


<p><strong>Notez bien</strong>&nbsp;qu&rsquo;il ya deux versions&nbsp;<strong>2.7.x et 3.7.x</strong>, la première est compatible avec les anciennes versions de Windows comme Windows vista, Windows 7&#8230;Tandis que la seconde est compatible avec les nouveaux systèmes d&rsquo;exploitation comme Windows 10&#8230;Choisissez donc la version qui vous convient et installez la à&nbsp;<strong>la racine de votre disque dur « C:\Python3.7 »</strong></p>



<h3>2ème étape :<a href="http://www.tresfacile.net/ide-pour-python/" target="_blank" rel="noreferrer noopener">Téléchargez et installez un IDE</a>&nbsp;de votre choix.</h3>



<span id="more-107"></span>



<p>Je vous recommande&nbsp;<a href="https://wingware.com/" target="_blank" rel="noreferrer noopener">l&rsquo;IDE Wing</a>&nbsp;: sympa et très facile à utiliser.</p>



<p>Après avoir télécharger et installer votre IDE Wing Python, lancez le depuis le menu démarrer :</p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/3-Wing-Ware-premier-programme-python-hello-world-lancer-ide-wing-python-1.png" alt="IDE-Wing-Python" class="wp-image-5475"/></figure></div>


<p>Avant de penser à coder maintenant, il va falloire préalablement penser à configurer votre IDE. A cet effet&nbsp; cliquez sur l&rsquo;outil de configuration de l&rsquo;IDE Wing :</p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/4-configuer-ide-wing-Python.png" alt="" class="wp-image-5476"/></figure></div>


<p>A ce moment là, une nouvelle fenêtre nômmée : Project Properties, s&rsquo;ouvre. Sélectionnez alors l&rsquo;option Custum et puis sur le bouton Browse et sélectionnez ensuite&nbsp; l&rsquo;executable Python interpreter :</p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/6-prject-properties-ide-wing-python-custum-browse-python-interpreter.png" alt="" class="wp-image-5478"/></figure></div>


<p>( L&rsquo;iterpreteur Python, se trouve généralement à l&rsquo;endroit :&nbsp; &nbsp;« C:\Python3.7\python.exe », comme le montre la figure suivante :</p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/7-prject-properties-ide-wing-python-custum-browse-python-interpreter-configure-ide.png" alt="" class="wp-image-5479"/></figure></div>


<h3>3ème étape : création d&rsquo;un premier programme Python</h3>



<p>Dans le menu&nbsp;<strong>Fichier</strong>&nbsp;de Wing, sélectionnez&nbsp;<strong>Nouveau:</strong></p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/1-Wing-Ware-premier-programme-python.png" alt="" class="wp-image-5480"/></figure></div>


<p>Un nouveau volet de l&rsquo;éditeur à onglets apparaît. Tapez le code ci-dessous:</p>



<pre class="wp-block-code"><code>s = "Voici un exemple de premier programme en Python !"
print( s )</code></pre>



<p>Dance premier programme on crée une&nbsp;<strong>nouvelle variable du type string</strong>&nbsp;(on dit aussi chaine de caractères ) nômmée&nbsp;<strong>s</strong>. print(s) permet d&rsquo;imprimer à l&rsquo;écaran la valeur de la chaine s.</p>



<p>Ensuite, avant d&rsquo;exécuter le programme, nous devrions le sauvegarder.</p>



<p>Pour enregistrer un fichier, vous pouvez accéder au menu Fichier et sélectionner Enregistrer, ou utiliser l’icône de disque de la barre d’outils ou simplement appuyer sur Ctrl-S.<br>Une boîte de dialogue Enregistrer apparaît.&nbsp; Enfin, cliquez sur Enregistrer.</p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/Python-premier-programme-wing-execution-2.png" alt="" class="wp-image-5488"/></figure></div>


<p>Maintenant, il ne vous reste qu&rsquo;à lancer votre premier programme :<br>Pour exécuter, assurez-vous que le script que vous souhaitez exécuter est l&rsquo;onglet actif (pour le moment, nous ne devrions avoir qu&rsquo;un seul onglet, ce qui est simple). Cliquez ensuite sur le bouton vert&nbsp; dans la barre d’outils supérieure.<br><br><br><br></p>



<p>Vous devriez voir la sortie dans le shell, comme dans la capture d&rsquo;écran ci-dessous :</p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/execution-premier-programme-python-wing-ide-python-1.png" alt="Wing-IDE-Python-execution-programme" class="wp-image-5483"/></figure></div>


<p>Toutes nos félicitations !</p>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/creation-dun-premier-programme-python-avec-wing/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>IDE pour Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/ide-pour-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/ide-pour-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 03:25:32 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=105</guid>

					<description><![CDATA[Python a connu un regain de popularité puisque ce langage de script s&#8217;est révélé attrayant pour l&#8217;apprentissage automatique et la science des données. Nous examinons quelques-uns des IDE et des éditeurs de code les plus populaires pour Python. L’ascendance actuelle de Python n’était pas sûre. Il y a dix ans, les langages de script tels&#8230;]]></description>
										<content:encoded><![CDATA[
<p></p>


<div class="wp-block-image">
<figure class="aligncenter"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/best-ide-python.png" alt="Top-IDE-Python" class="wp-image-5467"/></figure></div>


<p>Python a connu un regain de popularité puisque ce langage de script s&rsquo;est révélé attrayant pour l&rsquo;apprentissage automatique et la science des données. Nous examinons quelques-uns des IDE et des éditeurs de code les plus populaires pour Python.</p>



<p>L’ascendance actuelle de Python n’était pas sûre. Il y a dix ans, les langages de script tels que Perl, PHP et Ruby étaient les éléments les plus en vogue de la technologie. Pourtant, aujourd’hui, il ne reste plus que Python: le deuxième langage de programmation le plus populaire de GitHub et le langage de programmation principal le plus rapidement développé de Stack Overflow. De plus, il est considéré comme le langage le plus populaire pour l’apprentissage automatique.</p>



<p>En hommage à la popularité de Python, nous examinons les cinq principaux IDE et éditeurs de code pour Python. Ce n&rsquo;est en aucun cas une liste complète; nous avons dû réduire la liste à cinq. Ainsi, sans plus tarder et sans ordre particulier, voici les IDE Python les plus utilisés :</p>



<h3><a href="https://wingware.com/" target="_blank" rel="noreferrer noopener">1 &#8211; Wing IDE</a></h3>



<p><br><br><br><br>Wing est un IDE Python avec un puissant débogueur et un éditeur intelligent qui rendent le développement interactif Python rapide, précis et amusant.</p>



<ul><li>Débogueur puissant<br>Le débogueur de Wing facilite la correction des bugs et l&rsquo;écriture de nouveau code de manière interactive. Utilisez des points d&rsquo;arrêt conditionnels pour isoler un problème, puis passez en revue le code, inspectez les données, surveillez les valeurs, interagissez à partir de la ligne de commande de la sonde de débogage et procédez au débogage de manière récursive. Vous pouvez déboguer du code multi-processus et multi-processus lancé à partir de l&rsquo;EDI, hébergé dans une infrastructure Web, appelé à partir d&rsquo;une instance Python intégrée ou appelé sur un système distant.</li><li>Editeur Intelligent<br>L&rsquo;éditeur de Wing accélère le développement interactif Python avec la complétion automatique et la documentation adaptées au contexte, l&rsquo;aide à l&rsquo;appel, l&rsquo;édition automatique, le refactoring, le pliage de code, la sélection multiple, des extraits de code en ligne personnalisables, des signets, etc. Wing peut émuler vi, emacs, Eclipse, Visual Studio et XCode.</li><li>Navigation de code facile<br>Wing facilite le contournement du code avec la définition du goto, la recherche d&rsquo;utilisations, la recherche de symboles dans le projet, l&rsquo;index de symboles de l&rsquo;éditeur, le navigateur de source et la puissante recherche multi-fichiers.</li><li>Tests unitaires intégrés<br>Wing prend en charge le développement piloté par les tests avec des frameworks de test unittest, doctest, nose, pytest et Django. Les tests qui échouent sont faciles à corriger avec le puissant débogueur de Wing.<br>Développement à distance<br>La prise en charge du développement à distance, rapide à configurer, de Wing vous permet d’utiliser toutes les fonctionnalités de Wing de manière transparente et sécurisée avec du code Python exécuté sur un hôte, une machine virtuelle ou un conteneur distant.</li><li>Customizable et extensible<br>Wing propose des centaines d&rsquo;options de configuration concernant l&rsquo;émulation d&rsquo;éditeur, la disposition de l&rsquo;interface utilisateur, les thèmes d&rsquo;affichage, la coloration de la syntaxe, etc. De nouvelles fonctionnalités de l&rsquo;EDI peuvent être ajoutées en écrivant du code Python qui accède à l&rsquo;API de script de Wing.</li><li>Et beaucoup plus<br>Wing prend en charge la gestion de projet et le contrôle de révision avec Git, Mercurial, Perforce, Bazaar, Subversion et CVS. Les autres fonctionnalités incluent l&rsquo;intégration Pylint, l&rsquo;exécution de lignes de commande du système d&rsquo;exploitation et la conversion de style d&rsquo;indentation. Wing fonctionne sous Windows, OS X et Linux et prend également en charge le développement à distance de Raspberry Pi et d&rsquo;autres périphériques Linux ARM.<br>Plus d&rsquo;informations sur Wing peuvent être trouvées<a href="https://wingware.com/" target="_blank" rel="noreferrer noopener">&nbsp;ici.</a></li></ul>



<h3><a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noreferrer noopener">2 &#8211; PyCharm</a></h3>



<p><br><br><br><br>Vous recherchez un IDE complet et dédié pour Python? PyCharm a été développé par JetBrains, la même équipe qui a créé un autre IDE populaire pour Java, IntelliJ IDEA. Il est l’un des IDE les plus populaires pour Python et permet aux développeurs d’être plus productifs pendant que PyCharm s’occupe de la routine.</p>



<p>L&rsquo;option de communauté open source fournit aux développeurs tous les outils dont ils ont besoin pour un développement Python productif: navigation rapide dans le code, complétion de code, refactoring, tests unitaires et débogueur. L&rsquo;option commerciale prend entièrement en charge Django, Mako et Web2Py pour le développement Web.</p>



<p>Plus d&rsquo;informations sur PyCharm peuvent être trouvées&nbsp;<a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noreferrer noopener">ici</a>.</p>



<h3><a href="https://github.com/spyder-ide/spyder" target="_blank" rel="noreferrer noopener">3 &#8211; Spyder</a></h3>



<p>Non, ce n’est pas encore un autre remake de Spiderman. Spyder, l&rsquo;éditeur de développement scientifique Python, est pour la science! Plus précisément, la science des données. La combinaison unique de fonctionnalités de Spyder en fait un excellent outil pour les scientifiques, les ingénieurs et les analystes de données. Ces fonctionnalités intégrées incluent l&rsquo;édition avancée, une console interactice, une visionneuse de documentation, un explorateur de variables et toute une suite d&rsquo;outils de développement, y compris de très jolies options de visualisation pour rendre vos données plus brillantes.</p>



<p>Spyder est extensible via un système de plug-in et une API, avec une bibliothèque d&rsquo;extension PyQt5. Il est totalement gratuit, open source et 100% pur Python. Cet IDE est assez similaire à RStudio et Matlab, ce qui en fait un commutateur facile à apprendre pour les scientifiques de données. Spyder prend en charge Windows, MacOS et Linux.</p>



<p>Plus d&rsquo;informations sur Spyder peuvent être trouvées&nbsp;<a href="https://github.com/spyder-ide/spyder" target="_blank" rel="noreferrer noopener">ici</a>.</p>



<h3><a href="http://www.pydev.org/" target="_blank" rel="noreferrer noopener">4 &#8211; Eclipse + PyDev</a></h3>



<p><br><br><br><br>Ok, celui-ci triche peut-être un peu. Eclipse n’est pas un IDE spécifique à Python. Cependant, PyDev est le plugin gratuit et open source pour Eclipse qui permet aux développeurs d’utiliser toutes les fonctionnalités d’Eclipse tout en continuant d’écrire en Python. Compte tenu de notre histoire d&rsquo;amour de longue date avec Eclipse, il nous suffisait d&rsquo;ajouter celle-ci à la liste.</p>



<p>Après avoir installé un simple plugin pour votre environnement de développement Eclipse, PyDev peut être utilisé pour le développement Python, Jython et IronPython. Les fonctionnalités prêtes à l&#8217;emploi incluent l&rsquo;achèvement du code, l&rsquo;analyse du code, le refactoring, le débogage Python et même une console interactive. Si vous êtes un développeur Django, PyDev simplifie la création et l’exécution de nouveaux projets Django.</p>



<p>PyDev est recommandé dans le cadre du kit LiClipse, qui fournit également une prise en charge de C ++, JavaScript, Dart, etc.</p>



<p>Plus d&rsquo;informations sur Eclipse avec PyDev peuvent être trouvées&nbsp;<a href="http://www.pydev.org/" target="_blank" rel="noreferrer noopener">ici</a>.</p>



<h3><a href="https://docs.python.org/3/library/idle.html" target="_blank" rel="noreferrer noopener">5 &#8211; IDLE et IdleX</a></h3>



<p>Bien entendu, vous n&rsquo;avez pas besoin d&rsquo;aller très loin pour utiliser IDLE, le propre IDE minimal de Python. Nommé d&rsquo;après Eric Idle, de la célèbre marque Monty Python, cet IDE est extrêmement léger et fonctionne directement à partir du shell Python. Bien qu’il n’ait aucune capacité de gestion de projet à proprement parler, IDLE offre un débogueur puissant et est idéal si vous êtes inquiet à propos de la surcharge. Il offre un éditeur de texte multi-fenêtres avec un certain nombre de fonctionnalités, notamment l&rsquo;annulation multiple, la colorisation Python, l&rsquo;indentation intelligente, les astuces sur les appels, la complétion automatique, etc.</p>



<p>En outre, IdleX est une collection de plus de vingt extensions et plug-ins offrant des fonctionnalités supplémentaires à IDLE. IdleX offre aux développeurs encore plus d&rsquo;outils de recherche et de développement académiques, ainsi que de programmation exploratoire. Ces fonctionnalités incluent des améliorations du shell, des améliorations de l&rsquo;éditeur, une exécution interactive à partir de l&rsquo;éditeur, etc.</p>



<p>Plus d&rsquo;informations sur IDLE peuvent être trouvées&nbsp;<a href="https://docs.python.org/3/library/idle.html" target="_blank" rel="noreferrer noopener">ici.</a></p>
]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/ide-pour-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
		<item>
		<title>Introduction au langage Python</title>
		<link>https://sibylassana95.github.io/mon-blog/2022/06/18/introduction-au-langage-python/</link>
					<comments>https://sibylassana95.github.io/mon-blog/2022/06/18/introduction-au-langage-python/#respond</comments>
		
		<dc:creator><![CDATA[sibylassana95]]></dc:creator>
		<pubDate>Sat, 18 Jun 2022 03:15:21 +0000</pubDate>
				<category><![CDATA[Python]]></category>
		<guid isPermaLink="false">https://sibylassana95.github.io/mon-blog/?p=102</guid>

					<description><![CDATA[Python est un langage de programmation de haut niveau interprété pour la programmation à usage général. Créé par Guido van Rossum et publié pour la première fois en 1991, Python repose sur une philosophie de conception qui met l’accent sur la lisibilité du code, notamment en utilisant des espaces significatifs. Il fournit des constructions permettant&#8230;]]></description>
										<content:encoded><![CDATA[
<p>Python est un langage de programmation de haut niveau interprété pour la programmation à usage général. Créé par Guido van Rossum et publié pour la première fois en 1991, Python repose sur une philosophie de conception qui met l’accent sur la lisibilité du code, notamment en utilisant des espaces significatifs. Il fournit des constructions permettant une programmation claire à petite et grande échelle. En juillet 2018, Van Rossum a démissionné en tant que leader de la communauté après 30 ans.</p>



<p>Python propose un système de typage dynamique et une gestion automatique de la mémoire. Il prend en charge plusieurs paradigmes de programmation, notamment orienté objet, impératif, fonctionnel et procédural, et dispose d&rsquo;une bibliothèque standard étendue et complète.<br><br><br><br><br>Les interpréteurs Python sont disponibles pour de nombreux systèmes d&rsquo;exploitation. CPython, l&rsquo;implémentation de référence de Python, est un logiciel open source et dispose d&rsquo;un modèle de développement basé sur la communauté, comme le font presque toutes les autres implémentations de Python. Python et CPython sont gérés par l’association à but non lucratif Python Software Foundation.</p>



<p><a href="https://www.python.org/downloads/">Télécharger python</a></p>


<div class="wp-block-image">
<figure class="aligncenter"><a href="https://www.python.org/downloads/"><img src="http://www.tresfacile.net/wp-content/uploads/2018/10/python-download.png" alt="download-Python" class="wp-image-5464"/></a></figure></div>]]></content:encoded>
					
					<wfw:commentRss>https://sibylassana95.github.io/mon-blog/2022/06/18/introduction-au-langage-python/feed/</wfw:commentRss>
			<slash:comments>0</slash:comments>
		
		
			</item>
	</channel>
</rss>
